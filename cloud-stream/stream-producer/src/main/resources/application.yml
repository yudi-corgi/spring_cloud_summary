server:
  port: 8090

spring:
  application:
    name: stream-producer
  rabbitmq:
    addresses: 116.205.181.47
    username: admin
    password: admin123
    port: 5672
#  integration:
#    poller:
#      cron: 1 0 0 0 0 0          # CRON 表达式
#      fixed-delay: 2             # 固定延迟
#      fixed-rate: 2              # 固定频率
#      initial-delay: 5           # 初始延迟
#      max-messages-per-poll: 1   # 每次轮询的最大消息条数
#      receive-timeout: 2         # 接收超时时间
  cloud:
    stream:
      # Supplier 轮询全局配置（本项目 Stream 是 3.0.4 版本）
      # 在 3.2.x 以上之后，轮询配置放在 spring.Integration，如上方注释，详看 IntegrationProperties.Poller）
      poller:
        fixed-delay: 5000
        max-messages-per-poll: 1
      function:
        # 声明检查的函数处理器，| 管道符表示连接处理器
        # addDash 和 toTrim 都是 Function 类型，表示前者的输出会作为后者的输入
        # 在这里的示例中，toTrim 的输出指向了 allPrinter 的输入，因此会被其消费
        definition: stringSupplier;toUpperCase;addDash|toTrim;allPrinter
        # 为绑定声明别名
        bindings:
          addDash|toTrim-in-0: inTrimAndLowerCase
          addDash|toTrim-out-0: outTrimAndLowerCase
      bindings:
        # 指定好组合 Function 与 Consumer 的输入输出通道
        inTrimAndLowerCase:
          destination: trim-lower-topic
        outTrimAndLowerCase:
          destination: printer-topic
        allPrinter-in-0:
          destination: printer-topic
        # Function 配置，Function 包含输入输出，输出同样指定某个 Consumer#destination
        toUpperCase-in-0:
          destination: function-topic
          group: upper-demo
        toUpperCase-out-0:
          destination: msg-topic
        # Supplier 配置，Supplier 只负责输出（生产），因此 destination 指定某个 Consumer#destination 即可
        stringSupplier-out-0:
          destination: supplier-topic
          # 该轮询配置只对 stringSupplier 绑定有效
          #producer:
            # poller:
              # fixed-delay: 5000           # 发送间隔，其下 units 属性可控制时间单位
              # initial-delay: 1000         # 初始发送延迟时间，，其下 units 属性可控制时间单位
              # max-messages-per-poll: 1    # 每次轮询发送的消息条数
              # cron: 1 0 0 0 0 0           # CRON 表达式指定发送周期
